name: Build
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install poetry
        run: pip install poetry
      - name: Install any other packages
        run: poetry install
      - name: Run tests
        run: poetry run python -m pytest -m "not e2e" --cov-config=.coveragerc --cov=. --hypothesis-show-statistics --cov-report term --cov-report xml:coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12.0]
        poetry-version: [1.6]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run coverage run -m pytest -m "not e2e"
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12.0]
        poetry-version: [1.6]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 .
      - name: Run bandit
        run: poetry run bandit -r src
      - name: Run safety
        run: poetry run safety check
      - name: Run mypy
        run: poetry run mypy -m src.blog -m src.sum
